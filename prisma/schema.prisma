datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id           String      @id @map("_id") @db.ObjectId
  clerkId      String      @unique
  firstName    String
  lastName     String
  username     String
  email        String
  profileImage String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  properties   Property[]
  favourites   Favourite[]
  reviews      Review[]
  bookings     Booking[]
}

model Property {
  id          String      @id @map("_id") @db.ObjectId
  name        String
  tagline     String
  category    String
  image       String
  country     String
  description String
  price       Int
  guests      Int
  bedrooms    Int
  beds        Int
  baths       Int
  amenities   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  profile     Profile     @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId   String
  favourites  Favourite[]
  reviews     Review[]
  bookings    Booking[]
}

model Favourite {
  id        String   @id @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   Profile @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId String

  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId String   @db.ObjectId
}

model Review {
  id         String   @id @map("_id") @db.ObjectId
  profile    Profile  @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId  String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId String   @db.ObjectId
  rating     Int
  comment    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Booking {
  id            String   @id @map("_id") @db.ObjectId
  profile       Profile  @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
  profileId     String
  property      Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId    String   @db.ObjectId
  orderTotal    Int
  totalNights   Int
  checkIn       DateTime
  checkOut      DateTime
  paymentStatus Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
